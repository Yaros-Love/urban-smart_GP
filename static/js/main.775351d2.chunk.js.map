{"version":3,"sources":["logo.svg","store/action.js","components/buttons/logout-button.jsx","const/common.js","components/main/main.jsx","components/profile/profile.jsx","browser-history.js","components/private-route/private-route.jsx","components/app/App.jsx","store/reducer.js","index.js","store/middlewares/redirect.js"],"names":["ActionType","ActionCreator","status","type","payload","url","connect","dispatch","resetUser","className","onClick","AuthorizationStatus","AppRoute","state","authStatus","userLogin","userPassword","redirectToProfile","setAuthStatus","useState","errorText","setErrorText","isValid","setNewStatus","loginRef","useRef","passwordRef","checkValid","current","value","Fragment","src","logo","alt","action","onSubmit","evt","preventDefault","required","onChange","placeholder","ref","style","disabled","hashHistory","createHashHistory","render","path","exact","routeProps","to","App","history","initialState","store","createStore","composeWithDevTools","applyMiddleware","_store","next","browserHistory","push","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.775351d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ActionType = {\r\n  REQUIRED_AUTHORIZATION: `user/requiredAuthorization`,\r\n  REDIRECT_TO_ROUTE: `app/redirectToRoute`,\r\n  RESET_USER: `user/resetUser`,\r\n};\r\n\r\nexport const ActionCreator = {\r\n  requireAuthorization: (status) => ({\r\n    type: ActionType.REQUIRED_AUTHORIZATION,\r\n    payload: status,\r\n  }),\r\n\r\n  redirectToRoute: (url) => ({\r\n    type: ActionType.REDIRECT_TO_ROUTE,\r\n    payload: url,\r\n  }),\r\n\r\n  resetUSer: () => ({\r\n    type: ActionType.RESET_USER,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {ActionCreator} from '../../store/action';\r\nimport '../app/App.css';\r\n\r\nconst LogoutButton = ({resetUser}) => {\r\n  return (\r\n    <button \r\n      className=\"button\"\r\n      onClick={resetUser}>  \r\n    Logout\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    resetUser() {\r\n      dispatch(ActionCreator.resetUSer());\r\n    },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LogoutButton);\r\n","export const AuthorizationStatus = {\r\n  AUTH: `AUTH`,\r\n  NO_AUTH: `NO_AUTH`,\r\n};\r\n\r\nexport const AppRoute = {\r\n  ROOT: `/`,\r\n  PROFILE: `/profile`,\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport {connect} from 'react-redux';\r\nimport LogoutButton from '../buttons/logout-button';\r\nimport '../app/App.css';\r\nimport { ActionCreator } from '../../store/action';\r\nimport { AppRoute, AuthorizationStatus } from '../../const/common';\r\n\r\nconst MainPage = ({authStatus, userLogin, userPassword, redirectToProfile, setAuthStatus}) => {\r\n  const [errorText, setErrorText] = useState(``);\r\n  const [isValid, setNewStatus] = useState(true);\r\n\r\n  const loginRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const checkValid = () => {\r\n    if (passwordRef.current.value === userPassword && loginRef.current.value === userLogin) {\r\n      setNewStatus(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const isValidLogPass = passwordRef.current.value === userPassword && loginRef.current.value === userLogin;\r\n\r\n    if(isValidLogPass) {\r\n      setErrorText('');\r\n      setAuthStatus();\r\n      redirectToProfile();\r\n    } else {\r\n      setErrorText('* Wrong login or password. Try again.')\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <header>\r\n          <nav className=\"header_navigation\">\r\n            {authStatus === 'NO_AUTH' ? '' : <LogoutButton/>}\r\n          </nav>\r\n        </header>\r\n        <main className=\"main\">\r\n          <img src={logo} className=\"main-logo\" alt=\"logo\" />\r\n          <p>\r\n            Welcome to the Main page!\r\n          </p>\r\n\r\n          <form \r\n            className=\"login-form\" \r\n            action=\"#\"\r\n            onSubmit={handleSubmit}>\r\n            <label> Login\r\n              <input \r\n                type=\"text\"\r\n                required\r\n                onChange={() => checkValid()}\r\n                placeholder=\" Insert your login\"\r\n                ref={loginRef}\r\n                style={{\"borderColor\": errorText ? 'red' : ''}}\r\n                />\r\n            </label> \r\n            <label> Password\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={() => checkValid()}\r\n                placeholder=\"Insert your password\"\r\n                ref={passwordRef}\r\n                style={{\"borderColor\": errorText ? 'red' : ''}}\r\n                />\r\n            </label>\r\n            \r\n            <button \r\n              className=\"button button--submit\" \r\n              type=\"submit\"\r\n              disabled={!isValid ? false : true}\r\n            >Enter</button>\r\n          </form>\r\n          {errorText ? <p>{errorText}</p> : ''}\r\n        </main>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authStatus: state.authStatus,\r\n  userLogin: state.userLogin,\r\n  userPassword: state.userPassword,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  redirectToProfile() {\r\n    dispatch(ActionCreator.redirectToRoute(AppRoute.PROFILE))\r\n  },\r\n  setAuthStatus() {\r\n    dispatch(ActionCreator.requireAuthorization(AuthorizationStatus.AUTH))\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport logo from '../../logo.svg';\r\nimport LogoutButton from '../buttons/logout-button';\r\nimport '../app/App.css';\r\n\r\nconst ProfilePage = ({userLogin, authStatus}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"wrapper\">\r\n        <header>\r\n          <nav className=\"header_navigation\">\r\n            <h1 className=\"header_user-email\">{userLogin}</h1>\r\n            {authStatus === 'NO_AUTH' ? '' : <LogoutButton/>}\r\n          </nav>\r\n        </header>\r\n        <main className=\"main\">\r\n          <img src={logo} className=\"main-logo\" alt=\"logo\" />\r\n          <p>\r\n            Welcome to your Profile page!\r\n          </p>\r\n        </main>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userLogin: state.userLogin,\r\n  authStatus: state.authStatus,\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ProfilePage);\r\n","import {createHashHistory} from 'history';\r\n\r\nconst hashHistory = createHashHistory()\r\n\r\nexport default hashHistory;\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {AuthorizationStatus, AppRoute} from '../../const/common';\r\nimport {connect} from 'react-redux';\r\n\r\nconst PrivateRoute = ({render, path, exact, authStatus}) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      exact={exact}\r\n      render={(routeProps) => {\r\n        return (\r\n          authStatus === AuthorizationStatus.AUTH\r\n            ? render(routeProps)\r\n            : <Redirect to={AppRoute.ROOT} />\r\n        );\r\n      }}\r\n    />  \r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authStatus: state.authStatus,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import MainPage from '../main/main';\nimport {Switch, Route, Router as BrowserRouter} from 'react-router-dom';\nimport ProfilePage from '../profile/profile';\nimport hashHistory from '../../browser-history';\nimport {AppRoute} from '../../const/common';\nimport './App.css';\nimport PrivateRoute from '../private-route/private-route';\n\nconst App = () => {\n  return (\n    <BrowserRouter history={hashHistory}>\n        <Switch>\n          <Route exact path={AppRoute.ROOT}>\n            <MainPage />\n          </Route>\n          <PrivateRoute\n          exact\n          path={AppRoute.PROFILE}\n          render={() => <ProfilePage />}>\n          </PrivateRoute>\n          \n        </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import {ActionType} from './action';\r\nimport {AuthorizationStatus} from '../const/common';\r\n\r\nconst initialState = {\r\n  authStatus: AuthorizationStatus.NO_AUTH,\r\n  userLogin: 'developer21',\r\n  userPassword: '123456',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case ActionType.REQUIRED_AUTHORIZATION:\r\n      return {\r\n        ...state,\r\n        authStatus: action.payload,\r\n      };\r\n\r\n      case ActionType.RESET_USER:\r\n        return {\r\n          ...state,\r\n          authStatus: AuthorizationStatus.NO_AUTH,\r\n        };\r\n  };\r\n  return state;\r\n};\r\n\r\nexport {reducer};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport {reducer} from './store/reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {redirect} from './store/middlewares/redirect';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(redirect)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","import browserHistory from '../../browser-history';\r\nimport {ActionType} from '../action';\r\n\r\nexport const redirect = (_store) => (next) => (action) => {\r\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\r\n    browserHistory.push(action.payload);\r\n  }\r\n\r\n  return next(action);\r\n};"],"sourceRoot":""}